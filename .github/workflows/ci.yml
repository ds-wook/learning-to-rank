name: Continuous integration with lint check and pytest

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Run Ruff linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Ruff lint
        uses: chartboost/ruff-action@v1
        with:
          version: "0.9.9"
          args: check .

      - name: Run Ruff format
        uses: chartboost/ruff-action@v1
        with:
          version: "0.9.9"
          args: format --check .

  poetry-lock-check:
    name: Check if poetry.lock is up to date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "2.1.1"

      - name: Check if poetry.lock is in sync with pyproject.toml
        run: poetry check --lock

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "2.1.1"

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - name: Run pytest
        run: |
          poetry run pytest
